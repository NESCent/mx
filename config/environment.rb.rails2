# !!! Be sure to restart your web server after you modify this file. !!!
# Make sure your apache/www/etc. group has read access to this file, it determines what the RoR app runs as.

### See config/local_config.rb for local configuration ###

# Specifies gem version of Rails to use when vendor/rails is not present
RAILS_GEM_VERSION = '2.3.10' unless defined? RAILS_GEM_VERSION
APPLICATION_VERSION = '0.3.n'

# Uncomment below to force Rails into production mode when 
# you don't control web/app server and can't set it the proper way
ENV['RAILS_ENV'] ||= 'production'

# Bootstrap the Rails environment, frameworks, and default configuration

 require File.join(File.dirname(__FILE__), 'boot')  
# require File.expand_path(__FILE__)+ '/../../config/boot' # RUBY 1.9.2


Rails::Initializer.run do |config|
  # Settings in config/environments/* take precedence those specified here
  
  # Skip frameworks you're not going to use
  # config.frameworks -= [ :action_web_service, :action_mailer ]

  # Add additional load paths for your own custom dirs
  config.autoload_paths += %W(#{RAILS_ROOT}/lib/model_extensions #{RAILS_ROOT}/lib/ontology #{RAILS_ROOT}/lib/ontology/batch_load #{RAILS_ROOT}/lib/ontology/visualize #{RAILS_ROOT}/lib/toolbox)

  # Force all environments to use the same logger level 
  # (by default production uses :info, the others :debug)
   config.log_level = :debug

  # Enable page/fragment caching by setting a file-based store
  # (remember to create the caching directory and make it readable to the application)
  # config.action_controller.fragment_cache_store = :file_store, "#{RAILS_ROOT}/cache"

  # Activate observers that should always be running
  # config.active_record.observers = :cacher, :garbage_collector

  # Make Active Record use UTC-base instead of local time
  # config.active_record.default_timezone = :utc
  
  # Use Active Record's schema dumper instead of SQL when creating the test database
  # (enables use of different database adapters for development and test environments)
  # config.active_record.schema_format = :ruby

  # See Rails::Configuration for more options
  # rake gems:install
  # rake gems:build

  # require 'json/add/rails' # gets rid of some problems with later versions of json_pure and ascii_only? calls

 ## gems that have spawned from mx!
 #config.gem "obo_parser"   #, :version => "0.3.4"
 #config.gem "nexus_parser" #, :version => "1.1.4"
 #config.gem "rubyMorphbank", :version => ">=0.2.4"

 ## core gems   
 ##config.gem "fastercsv", :version => "1.5.3" 
 #require 'fastercsv'
 #require 'csv'
 #
 #config.gem "mysql"
 #config.gem "haml"
 #config.gem "echoe" # !! This may need to be commented out for recent versions of passenger.
 #config.gem "RedCloth"
 #config.gem "exception_notification", :version => "2.3.3.0"
 #config.gem 'andand', :version => '1.3.1'
 #config.gem 'vestal_versions', :version => '1.0.2'
 #config.gem 'alchemist', :version => '0.1.2.1'
 ## config.gem 'addressable', :version => '2.2.4' # !! 2.2.5 will not work, uninstall from your library completely.

 ## gems used superficially, i.e. you could probably remove these with a little coding effort and functionality sacrifice
 ## config.gem "ruby-debug", :version => '0.10.4'

 #config.gem "bio", :version => '1.4.1' 
 #config.gem 'geokit'
 #config.gem 'cmess', :version => '0.2.4' # character encoding guessing
 #config.gem "ruby-graphviz", :lib => "graphviz", :version => '0.9.21'
 #config.gem 'rdf', :version => '0.3.3'
 #config.gem 'rdf-rdfxml', :lib => 'rdf/rdfxml', :version => '0.3.3.1'

  # used in SVG validation and persistence 
  ALLOWED_SVG_TAGS        = ['g', 'path', 'line', 'circle']
  ALLOWED_SVG_ATTRIBUTES  = ['d', 'x1', 'x2', 'y1', 'y2', 'stroke-dasharray', 'stroke-linecap', 'stroke-linejoin', 'cx', 'cy', 'r'] 
  
  config.action_view.sanitized_allowed_tags = ['ref', 'otu']
  config.action_view.sanitized_allowed_tags += ALLOWED_SVG_TAGS

  config.action_view.sanitized_allowed_attributes = ['id', 'target'] # 'version', 'xmlns'
  config.action_view.sanitized_allowed_attributes += ALLOWED_SVG_ATTRIBUTES

  SPECIES_PROFILE_CONTROLLED_VOCABULARY = YAML::load(File.open(File.join(File.dirname(__FILE__), 'authority_files/species_profile_controlled_vocabulary.yml'))) 
  BIOPORTAL_AUTOCOMPLETE_ONTOLOGIES = YAML::load(File.open(File.join(File.dirname(__FILE__), 'authority_files/bioportal_autocomplete.yml'))) 
end

