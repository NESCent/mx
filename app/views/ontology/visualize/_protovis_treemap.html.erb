<script type="text/javascript+protovis">
  var re = "", color = pv.Colors.category19().by(function(n) n.keys.slice(0, -1));
  function count() {
    var nodes = vis.scene[0].children[0].map(function(s) s.data);
    var classes = 0, bytes = 0, total = 0;
      for (var i = 0; i < nodes.length; i++) {
        var n = nodes[i];
        total += n.data;
        if (n.keys.join(".").match(re)) {
          classes++;
          bytes += n.data;
        }
      }
      var percent = bytes / total * 100;
      title.innerHTML
          = classes + " classes; "
          + bytes + " bytes ("
          + percent.toFixed(percent < 10) + "%).";
    } // end classes

  function update(query) {
    if (query != re) {
      re = new RegExp(query, "i");
      count();
      vis.render();
    }
  } // end update

  function lbls(txt) {
    var blorf =  new pv.Panel()
      .width(150)
      .height(150)
    .anchor("center").add(pv.Label)
      .text(txt)
    .root;
    blorf.render(); 
  } // end lbls


  function foo () {
    new Ajax.Request("http://127.0.0.1:3000/projects/<%= @proj.id -%>/ontology/test4/<%= @tree_root.id -%>", {
      method: 'get',
      onSuccess: function(transport) {
      var bar = transport.responseJSON;
      var flare = <%= @tree_root.js_hash(:max_depth => 4, :relationship_type => Isa.find(:first, :conditions => {:interaction => 'is_a', :proj_id => @proj.id}).id) -%>;
      
      var vis = new pv.Panel()
        .width(1024)
        .height(668)
      .add(pv.Bar)
        .extend(pv.Layout.treemap(flare).root("flare").round(true))
        .width(function(n) n.width - 1)
        .height(function(n) n.height - 1)
        .fillStyle(function(n) color(n).alpha(n.keys.join(".").match(re) ? 1 : .2))
        .title(function(n) n.keys.join(".") + ": " + n.data)
        .cursor("pointer")
        .event("click", function(n) self.location
            =  "/projects/<%= @proj.id -%>/ontology/protovis_sunburst/" + n.keys[n.keys.length -1] )
      .anchor("center").add(pv.Label)
        .textStyle("#222")
        .text(function(n) bar[n.keys[n.keys.length -1]]) 
      .root;

    lbls("something here");
    lbls("something there");
    
    vis.render();
   
      }
    }) 
  } // end foo

  


foo();

     // search.focus();
     // count();
</script>

