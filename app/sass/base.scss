/*
  SCSS is fantastic.  Check out the syntax on: http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html

  Basic primer:
  Nested rules will be flattened out for CSS.  So you can nest like so:

  form {
    color: black;
    input {
      color: blue;
    }
    span {
      color: red;
    }
  }

  ==>
  form { color: black; }
  form input { color: blue; }
  form span  { color: red; }


  You can use selectors just like in jQuery:

  input[type="text"]

  .chaining.class.selectors.together

  One trick is this:
  form {
    input {
      color: blue;
    }
    // The & is the parent selector, so you can move it about.
    .special-layout & span { color: red }
  }

  ==>

  form input { color: blue; }
  .special-layout form span { color: red; }

  Makes it easy to 'hop' out of a set of SCSS rules and add an extra selector if you need one.



   All of these files are generated by SASS and placed in public/generated/*.css
*/

@import "mx/association";
@import "mx/ce";
@import "mx/clave";
@import "mx/mx";
@import "mx/ontology";
@import "mx/otu_group";
@import "mx/ref";
@import "mx/seq";
@import "mx/trait";

@import "bourbon/bourbon";

.t-r { text-align: right; }
.t-l { text-align: left; }
.t-c { text-align: center; }
.r { float: right; }
.l { float: left; }
.hide-element { display: none; }

form.delete-link {
  display: inline;
  background: #F6C3D4;

  input[type="submit"] {
    display: inline;
    border: none;
    background: transparent;
    cursor: pointer;
  }
}

.popupform {
  background: white;
  margin: 1em;
  height: auto;
  .basic-modal-close {
    float: right;
    padding: 5px;
    background-color: #a0c0e0;
    border:1px solid #696;
    margin-right:1em;
  }
}

.autoquery-loading, .ui-autocomplete-loading { background: white url('/images/spinner.gif') right center no-repeat; }
.ui-autocomplete { background: white; position: absolute; text-align: left; }
#ui-active-menuitem {
  background: #ffa;
}

.mx-tooltip {
  border: 3px solid #2171B5;
  padding: 5px;
  background: white;
  @include box-shadow(3px 3px 6px #aaaaaa);
  .notch {
    @include position(absolute, -10px 0 0 0);
    margin: 0;
    border-top: 0;
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    border-bottom: 10px solid #2171B5;
    padding: 0;
    width: 0;
    height: 0;
    /* ie6 height fix */
    font-size: 0;
    line-height: 0;
     /* ie6 transparent fix */
    _border-right-color: pink;
    _border-left-color: pink;
    _filter: chroma(color=pink);
  }
}

.drag-handle {
  background: transparent;
  width: 10px;
  height: 10px;
  padding: 0px 2px;
  position: relative;
  top: 10px;
  @include inline-block;
  .row {
    background: #aeaeae;
    margin: 2px 0px;
    height: 2px;
  }
  cursor: move;
}

.mx-spinner {
  position: absolute;
  background-image: url(/images/modal_spinner.gif);
  background-position: 50% 25%;
  background-repeat: no-repeat;
  background-color: #aeaeae;
  opacity: 0.7;
}

.inplace-hover {
  @include box-shadow(0px 0px 5px darken(#E0EEE0, 55%));
}

#attached_figures {
  max-height: 285px;
  overflow-y: auto;
}
#find_images_results {
  max-height: 235px;
  overflow: auto;
}

nav.list_pagination {
  label {
    color: #bbb;
  }
  label.count_report {
    float: right;
    color: black;
    margin: 0px 4px;
  }
  background: #eee;
  padding: 1px 5px;
  height: 18px;
  vertical-align: middle;
}

/*
  This is a simple form - first TDs are labels, rest are normal.
*/
.table-form {
  tr {
    &.spacer {
      height: 15px;
      width: 100%;
    }
    &.plain {
      & > td:first-child { font-weight: normal; }
    }
    & > td {
      vertical-align: middle;
      text-align: left;
      &:nth-child(odd) { text-align: right; }
      &.t-r { text-align: right; }
      &.t-l { text-align: left; }
      &.t-c { text-align: center; }
      &:first-child {
        font-weight: bold;
      }
      .spaced-link {
        padding: 4px 6px;
      }
    }
  }
}

.subnav-wrapper {
  position: relative;
  height: 45px;
  background: white;
  .subnav {
    height: 45px;
    &.sticky {
      border: 0px;
      position: fixed;
      width: 100%;
      top: -3px;
      left: 0px;
      margin-top: 3px;
      padding-right: 24px;
      @include box-sizing( border-box);
      .class_navigator {
        @include box-shadow(0px 0px 6px #aaaaaa);
        border: 3px solid white;
      }
    }
  }
}

.image-with-markers {
  overflow: hidden;
}
/* Figure markers are related to SVG images.
   Color them here.
*/

@mixin figure_marker($number, $color) {
  .figure-marker-#{$number} {
    fill: $color;
    stroke: $color;
  }
}

.figure-marker {
  opacity: 0.55;
  &.highlight {
    outline: 3px solid black;
  }
}

/* Copied from lib/toolbox/colors.rb (cb_qual_12) */
@include figure_marker(0,   #8dd3c7);
@include figure_marker(1,   #ffffb3);
@include figure_marker(2,   #bebada);
@include figure_marker(3,   #fb8072);
@include figure_marker(4,   #80b1d3);
@include figure_marker(5,   #fdb462);
@include figure_marker(6,   #b3de69);
@include figure_marker(7,   #fccde5);
@include figure_marker(8,   #d9d9d9);
@include figure_marker(9,   #bc80bd);
@include figure_marker(10,  #ccebc5);
@include figure_marker(11,  #ffed6f);
